{"ast":null,"code":"import _defineProperty from \"/home/zerosum24/Documents/Computer_Science/Fourth_Year/Sem_Two/IoTSSC/cw/Codebase/Dashboard/material-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"/home/zerosum24/Documents/Computer_Science/Fourth_Year/Sem_Two/IoTSSC/cw/Codebase/Dashboard/material-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/zerosum24/Documents/Computer_Science/Fourth_Year/Sem_Two/IoTSSC/cw/Codebase/Dashboard/material-dashboard-react/src/components/Sidebar/Sidebar.jsx\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\"; // core components\n\nimport AdminNavbarLinks from \"../Navbars/AdminNavbarLinks.jsx\";\nimport RTLNavbarLinks from \"../Navbars/RTLNavbarLinks.jsx\";\nimport sidebarStyle from \"../../assets/jss/material-dashboard-react/components/sidebarStyle.jsx\";\n\nvar Sidebar = function Sidebar(_ref) {\n  var props = _extends({}, _ref);\n\n  // verifies if routeName is the one active (in browser input)\n  function activeRoute(routeName) {\n    return props.location.pathname.indexOf(routeName) > -1 ? true : false;\n  }\n\n  var classes = props.classes,\n      color = props.color,\n      logo = props.logo,\n      image = props.image,\n      logoText = props.logoText,\n      logoTextImg = props.logoTextImg,\n      routes = props.routes;\n  var links = React.createElement(List, {\n    className: classes.list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, routes.map(function (prop, key) {\n    var activePro = \" \";\n    var listItemClasses;\n    listItemClasses = classNames(_defineProperty({}, \" \" + classes[color], activeRoute(prop.layout + prop.path)));\n    var whiteFontClasses = classNames(_defineProperty({}, \" \" + classes.whiteFont, activeRoute(prop.layout + prop.path)));\n    return React.createElement(NavLink, {\n      to: prop.layout + prop.path,\n      className: activePro + classes.item,\n      activeClassName: \"active\",\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      className: classes.itemLink + listItemClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, typeof prop.icon === \"string\" ? React.createElement(Icon, {\n      className: classNames(classes.itemIcon, whiteFontClasses, _defineProperty({}, classes.itemIconRTL, props.rtlActive)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, prop.icon) : React.createElement(prop.icon, {\n      className: classNames(classes.itemIcon, whiteFontClasses, _defineProperty({}, classes.itemIconRTL, props.rtlActive)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(ListItemText, {\n      primary: props.rtlActive ? prop.rtlName : prop.name,\n      className: classNames(classes.itemText, whiteFontClasses, _defineProperty({}, classes.itemTextRTL, props.rtlActive)),\n      disableTypography: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })));\n  }));\n  var brand = React.createElement(\"div\", {\n    className: classes.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"\",\n    className: classNames(classes.logoLink, _defineProperty({}, classes.logoLinkRTL, props.rtlActive)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.logoImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    alt: \"logo\",\n    className: classes.img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: logoTextImg,\n    alt: \"logoTextImg\",\n    className: classes.logoTextImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }))));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    variant: \"temporary\",\n    anchor: props.rtlActive ? \"left\" : \"right\",\n    open: props.open,\n    classes: {\n      paper: classNames(classes.drawerPaper, _defineProperty({}, classes.drawerPaperRTL, props.rtlActive))\n    },\n    onClose: props.handleDrawerToggle,\n    ModalProps: {\n      keepMounted: true // Better open performance on mobile.\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, brand, React.createElement(\"div\", {\n    className: classes.sidebarWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, props.rtlActive ? React.createElement(RTLNavbarLinks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }) : React.createElement(AdminNavbarLinks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), links), image !== undefined ? React.createElement(\"div\", {\n    className: classes.background,\n    style: {\n      backgroundImage: \"url(\" + image + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }) : null)), React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    anchor: props.rtlActive ? \"right\" : \"left\",\n    variant: \"permanent\",\n    open: true,\n    classes: {\n      paper: classNames(classes.drawerPaper, _defineProperty({}, classes.drawerPaperRTL, props.rtlActive))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, brand, React.createElement(\"div\", {\n    className: classes.sidebarWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, links), image !== undefined ? React.createElement(\"div\", {\n    className: classes.background,\n    style: {\n      backgroundImage: \"url(\" + image + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }) : null)));\n};\n\nSidebar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(sidebarStyle)(Sidebar);","map":{"version":3,"sources":["/home/zerosum24/Documents/Computer_Science/Fourth_Year/Sem_Two/IoTSSC/cw/Codebase/Dashboard/material-dashboard-react/src/components/Sidebar/Sidebar.jsx"],"names":["React","classNames","PropTypes","NavLink","withStyles","Drawer","Hidden","List","ListItem","ListItemText","Icon","AdminNavbarLinks","RTLNavbarLinks","sidebarStyle","Sidebar","props","activeRoute","routeName","location","pathname","indexOf","classes","color","logo","image","logoText","logoTextImg","routes","links","list","map","prop","key","activePro","listItemClasses","layout","path","whiteFontClasses","whiteFont","item","itemLink","icon","itemIcon","itemIconRTL","rtlActive","rtlName","name","itemText","itemTextRTL","brand","logoLink","logoLinkRTL","logoImage","img","open","paper","drawerPaper","drawerPaperRTL","handleDrawerToggle","keepMounted","sidebarWrapper","undefined","background","backgroundImage","propTypes","object","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,kBAAxB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CACA;;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,OAAOC,YAAP,MAAyB,uEAAzB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAkB;AAAA,MAAZC,KAAY;;AAChC;AACA,WAASC,WAAT,CAAqBC,SAArB,EAAgC;AAC9B,WAAOF,KAAK,CAACG,QAAN,CAAeC,QAAf,CAAwBC,OAAxB,CAAgCH,SAAhC,IAA6C,CAAC,CAA9C,GAAkD,IAAlD,GAAyD,KAAhE;AACD;;AAJ+B,MAKxBI,OALwB,GAKuCN,KALvC,CAKxBM,OALwB;AAAA,MAKfC,KALe,GAKuCP,KALvC,CAKfO,KALe;AAAA,MAKRC,IALQ,GAKuCR,KALvC,CAKRQ,IALQ;AAAA,MAKFC,KALE,GAKuCT,KALvC,CAKFS,KALE;AAAA,MAKKC,QALL,GAKuCV,KALvC,CAKKU,QALL;AAAA,MAKeC,WALf,GAKuCX,KALvC,CAKeW,WALf;AAAA,MAK4BC,MAL5B,GAKuCZ,KALvC,CAK4BY,MAL5B;AAMhC,MAAIC,KAAK,GACP,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEP,OAAO,CAACQ,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,CAACG,GAAP,CAAW,UAACC,IAAD,EAAOC,GAAP,EAAe;AACzB,QAAIC,SAAS,GAAG,GAAhB;AACA,QAAIC,eAAJ;AACAA,IAAAA,eAAe,GAAGjC,UAAU,qBACzB,MAAMoB,OAAO,CAACC,KAAD,CADY,EACFN,WAAW,CAACe,IAAI,CAACI,MAAL,GAAcJ,IAAI,CAACK,IAApB,CADT,EAA5B;AAGA,QAAMC,gBAAgB,GAAGpC,UAAU,qBAChC,MAAMoB,OAAO,CAACiB,SADkB,EACNtB,WAAW,CAACe,IAAI,CAACI,MAAL,GAAcJ,IAAI,CAACK,IAApB,CADL,EAAnC;AAGA,WACE,oBAAC,OAAD;AACE,MAAA,EAAE,EAAEL,IAAI,CAACI,MAAL,GAAcJ,IAAI,CAACK,IADzB;AAEE,MAAA,SAAS,EAAEH,SAAS,GAAGZ,OAAO,CAACkB,IAFjC;AAGE,MAAA,eAAe,EAAC,QAHlB;AAIE,MAAA,GAAG,EAAEP,GAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,SAAS,EAAEX,OAAO,CAACmB,QAAR,GAAmBN,eAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,OAAOH,IAAI,CAACU,IAAZ,KAAqB,QAArB,GACC,oBAAC,IAAD;AACE,MAAA,SAAS,EAAExC,UAAU,CAACoB,OAAO,CAACqB,QAAT,EAAmBL,gBAAnB,sBAClBhB,OAAO,CAACsB,WADU,EACI5B,KAAK,CAAC6B,SADV,EADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGb,IAAI,CAACU,IALR,CADD,GASC,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,SAAS,EAAExC,UAAU,CAACoB,OAAO,CAACqB,QAAT,EAAmBL,gBAAnB,sBAClBhB,OAAO,CAACsB,WADU,EACI5B,KAAK,CAAC6B,SADV,EADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAgBE,oBAAC,YAAD;AACE,MAAA,OAAO,EACL7B,KAAK,CAAC6B,SAAN,GAAkBb,IAAI,CAACc,OAAvB,GAAiCd,IAAI,CAACe,IAF1C;AAIE,MAAA,SAAS,EAAE7C,UAAU,CAACoB,OAAO,CAAC0B,QAAT,EAAmBV,gBAAnB,sBAClBhB,OAAO,CAAC2B,WADU,EACIjC,KAAK,CAAC6B,SADV,EAJvB;AAOE,MAAA,iBAAiB,EAAE,IAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CANF,CADF;AAmCD,GA5CA,CADH,CADF;AAiDA,MAAIK,KAAK,GACP;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAACE,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,EADP;AAEE,IAAA,SAAS,EAAEtB,UAAU,CAACoB,OAAO,CAAC6B,QAAT,sBAClB7B,OAAO,CAAC8B,WADU,EACIpC,KAAK,CAAC6B,SADV,EAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,SAAS,EAAEvB,OAAO,CAAC+B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAE7B,IAAV;AAAgB,IAAA,GAAG,EAAC,MAApB;AAA2B,IAAA,SAAS,EAAEF,OAAO,CAACgC,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,GAAG,EAAE3B,WAAV;AAAuB,IAAA,GAAG,EAAC,aAA3B;AAAyC,IAAA,SAAS,EAAEL,OAAO,CAACK,WAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,CADF,CADF;AAeA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAa,IAAA,cAAc,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,MAAM,EAAEX,KAAK,CAAC6B,SAAN,GAAkB,MAAlB,GAA2B,OAFrC;AAGE,IAAA,IAAI,EAAE7B,KAAK,CAACuC,IAHd;AAIE,IAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAEtD,UAAU,CAACoB,OAAO,CAACmC,WAAT,sBACdnC,OAAO,CAACoC,cADM,EACW1C,KAAK,CAAC6B,SADjB;AADV,KAJX;AASE,IAAA,OAAO,EAAE7B,KAAK,CAAC2C,kBATjB;AAUE,IAAA,UAAU,EAAE;AACVC,MAAAA,WAAW,EAAE,IADH,CACQ;;AADR,KAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcGV,KAdH,EAeE;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAACuC,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG7C,KAAK,CAAC6B,SAAN,GAAkB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,GAAuC,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD1C,EAEGhB,KAFH,CAfF,EAmBGJ,KAAK,KAAKqC,SAAV,GACC;AACE,IAAA,SAAS,EAAExC,OAAO,CAACyC,UADrB;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE,SAASvC,KAAT,GAAiB;AAApC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAKG,IAxBN,CADF,CADF,EA6BE,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAe,IAAA,cAAc,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,MAAM,EAAET,KAAK,CAAC6B,SAAN,GAAkB,OAAlB,GAA4B,MADtC;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,IAAI,MAHN;AAIE,IAAA,OAAO,EAAE;AACPW,MAAAA,KAAK,EAAEtD,UAAU,CAACoB,OAAO,CAACmC,WAAT,sBACdnC,OAAO,CAACoC,cADM,EACW1C,KAAK,CAAC6B,SADjB;AADV,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGK,KAVH,EAWE;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAACuC,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyChC,KAAzC,CAXF,EAYGJ,KAAK,KAAKqC,SAAV,GACC;AACE,IAAA,SAAS,EAAExC,OAAO,CAACyC,UADrB;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE,SAASvC,KAAT,GAAiB;AAApC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAKG,IAjBN,CADF,CA7BF,CADF;AAqDD,CA3HD;;AA6HAV,OAAO,CAACkD,SAAR,GAAoB;AAClB3C,EAAAA,OAAO,EAAEnB,SAAS,CAAC+D,MAAV,CAAiBC;AADR,CAApB;AAIA,eAAe9D,UAAU,CAACS,YAAD,CAAV,CAAyBC,OAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\n// core components\nimport AdminNavbarLinks from \"../Navbars/AdminNavbarLinks.jsx\";\nimport RTLNavbarLinks from \"../Navbars/RTLNavbarLinks.jsx\";\n\nimport sidebarStyle from \"../../assets/jss/material-dashboard-react/components/sidebarStyle.jsx\";\n\nconst Sidebar = ({ ...props }) => {\n  // verifies if routeName is the one active (in browser input)\n  function activeRoute(routeName) {\n    return props.location.pathname.indexOf(routeName) > -1 ? true : false;\n  }\n  const { classes, color, logo, image, logoText, logoTextImg, routes } = props;\n  var links = (\n    <List className={classes.list}>\n      {routes.map((prop, key) => {\n        var activePro = \" \";\n        var listItemClasses;\n        listItemClasses = classNames({\n          [\" \" + classes[color]]: activeRoute(prop.layout + prop.path)\n        });\n        const whiteFontClasses = classNames({\n          [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path)\n        });\n        return (\n          <NavLink\n            to={prop.layout + prop.path}\n            className={activePro + classes.item}\n            activeClassName=\"active\"\n            key={key}\n          >\n            <ListItem button className={classes.itemLink + listItemClasses}>\n              {typeof prop.icon === \"string\" ? (\n                <Icon\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\n                    [classes.itemIconRTL]: props.rtlActive\n                  })}\n                >\n                  {prop.icon}\n                </Icon>\n              ) : (\n                <prop.icon\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\n                    [classes.itemIconRTL]: props.rtlActive\n                  })}\n                />\n              )}\n              <ListItemText\n                primary={\n                  props.rtlActive ? prop.rtlName : prop.name\n                }\n                className={classNames(classes.itemText, whiteFontClasses, {\n                  [classes.itemTextRTL]: props.rtlActive\n                })}\n                disableTypography={true}\n              />\n            </ListItem>\n          </NavLink>\n        );\n      })}\n    </List>\n  );\n  var brand = (\n    <div className={classes.logo}>\n      <a\n        href=\"\"\n        className={classNames(classes.logoLink, {\n          [classes.logoLinkRTL]: props.rtlActive\n        })}\n      >\n        <div className={classes.logoImage}>\n          <img src={logo} alt=\"logo\" className={classes.img} />\n          <img src={logoTextImg} alt=\"logoTextImg\" className={classes.logoTextImg} />\n        </div>\n      </a>\n    </div>\n  );\n  return (\n    <div>\n      <Hidden mdUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={props.rtlActive ? \"left\" : \"right\"}\n          open={props.open}\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive\n            })\n          }}\n          onClose={props.handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true // Better open performance on mobile.\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>\n            {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\n            {links}\n          </div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          anchor={props.rtlActive ? \"right\" : \"left\"}\n          variant=\"permanent\"\n          open\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive\n            })\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>{links}</div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n    </div>\n  );\n};\n\nSidebar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(sidebarStyle)(Sidebar);\n"]},"metadata":{},"sourceType":"module"}