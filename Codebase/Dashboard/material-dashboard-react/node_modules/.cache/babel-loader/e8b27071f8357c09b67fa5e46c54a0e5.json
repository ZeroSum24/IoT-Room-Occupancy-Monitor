{"ast":null,"code":"import _classCallCheck from \"/home/zerosum24/Documents/Computer_Science/Fourth_Year/Sem_Two/IoTSSC/cw/Codebase/Dashboard/material-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/zerosum24/Documents/Computer_Science/Fourth_Year/Sem_Two/IoTSSC/cw/Codebase/Dashboard/material-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/zerosum24/Documents/Computer_Science/Fourth_Year/Sem_Two/IoTSSC/cw/Codebase/Dashboard/material-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/zerosum24/Documents/Computer_Science/Fourth_Year/Sem_Two/IoTSSC/cw/Codebase/Dashboard/material-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/zerosum24/Documents/Computer_Science/Fourth_Year/Sem_Two/IoTSSC/cw/Codebase/Dashboard/material-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _toConsumableArray from \"/home/zerosum24/Documents/Computer_Science/Fourth_Year/Sem_Two/IoTSSC/cw/Codebase/Dashboard/material-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/home/zerosum24/Documents/Computer_Science/Fourth_Year/Sem_Two/IoTSSC/cw/Codebase/Dashboard/material-dashboard-react/src/views/Icons/Icons.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Hidden from \"@material-ui/core/Hidden\"; // core components\n\nimport GridItem from \"../../components/Grid/GridItem.jsx\";\nimport GridContainer from \"../../components/Grid/GridContainer.jsx\";\nimport Card from \"../../components/Card/Card.jsx\";\nimport CardHeader from \"../../components/Card/CardHeader.jsx\";\nimport CardBody from \"../../components/Card/CardBody.jsx\";\nimport iconsStyle from \"../../assets/jss/material-dashboard-react/views/iconsStyle.jsx\";\nimport { letterFrequency } from '@vx/mock-data';\nimport { Group } from '@vx/group';\nimport { Bar } from '@vx/shape';\nimport { scaleLinear, scaleBand } from '@vx/scale'; // We'll use some mock data from `@vx/mock-data` for this.\n\nvar data = letterFrequency; // Define the graph dimensions and margins\n\nvar width = 500;\nvar height = 500;\nvar margin = {\n  top: 20,\n  bottom: 20,\n  left: 20,\n  right: 20\n}; // Then we'll create some bounds\n\nvar xMax = width - margin.left - margin.right;\nvar yMax = height - margin.top - margin.bottom; // We'll make some helpers to get at the data we want\n\nvar x = function x(d) {\n  return d.letter;\n};\n\nvar y = function y(d) {\n  return +d.frequency * 100;\n}; // And then scale the graph by our data\n\n\nvar xScale = scaleBand({\n  rangeRound: [0, xMax],\n  domain: data.map(x),\n  padding: 0.4\n});\nvar yScale = scaleLinear({\n  rangeRound: [yMax, 0],\n  domain: [0, Math.max.apply(Math, _toConsumableArray(data.map(y)))]\n}); // Compose together the scale and accessor functions to get point functions\n\nvar compose = function compose(scale, accessor) {\n  return function (data) {\n    return scale(accessor(data));\n  };\n};\n\nvar xPoint = compose(xScale, x);\nvar yPoint = compose(yScale, y); // Finally we'll embed it all in an SVG\n\nfunction BarGraph(props) {\n  return React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, data.map(function (d, i) {\n    var barHeight = yMax - yPoint(d);\n    return React.createElement(Group, {\n      key: \"bar-\".concat(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      x: xPoint(d),\n      y: yMax - barHeight,\n      height: barHeight,\n      width: xScale.bandwidth(),\n      fill: \"#fc2e1c\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }));\n} //\n// import {\n//   occupancyStatsChart,\n// } from \"../../variables/d3Charts.jsx\";\n\n\nvar Icons =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Icons, _React$Component);\n\n  function Icons(props) {\n    var _this;\n\n    _classCallCheck(this, Icons);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Icons).call(this, props));\n\n    _this.handleChange = function (event, value) {\n      _this.setState({\n        value: value\n      }); // this.setState({xScale: ReactD3.time.scale().domain([extent[0], extent[1]]).range([0, 400 - 70])});\n\n    };\n\n    _this.state = {\n      data: {\n        label: '',\n        values: [{\n          x: 5,\n          y: 1\n        }, {\n          x: 5,\n          y: 2\n        }, {\n          x: 5,\n          y: 0\n        }, {\n          x: 5,\n          y: 3\n        }, {\n          x: 5,\n          y: 2\n        }, {\n          x: 5,\n          y: 3\n        }, {\n          x: 5,\n          y: 4\n        }, {\n          x: 5,\n          y: 4\n        }, {\n          x: 5,\n          y: 1\n        }, {\n          x: 4,\n          y: 5\n        }, {\n          x: 2,\n          y: 0\n        }]\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Icons, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Card, {\n        plain: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        plain: true,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: classes.cardTitleWhite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Occupancy Statistics\"), React.createElement(\"p\", {\n        className: classes.cardCategoryWhite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Derived from room data per hour\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(BarGraph, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return Icons;\n}(React.Component);\n\nIcons.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(iconsStyle)(Icons);","map":{"version":3,"sources":["/home/zerosum24/Documents/Computer_Science/Fourth_Year/Sem_Two/IoTSSC/cw/Codebase/Dashboard/material-dashboard-react/src/views/Icons/Icons.jsx"],"names":["React","PropTypes","withStyles","Hidden","GridItem","GridContainer","Card","CardHeader","CardBody","iconsStyle","letterFrequency","Group","Bar","scaleLinear","scaleBand","data","width","height","margin","top","bottom","left","right","xMax","yMax","x","d","letter","y","frequency","xScale","rangeRound","domain","map","padding","yScale","Math","max","compose","scale","accessor","xPoint","yPoint","BarGraph","props","i","barHeight","bandwidth","Icons","handleChange","event","value","setState","state","label","values","classes","cardTitleWhite","cardCategoryWhite","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Hidden from \"@material-ui/core/Hidden\";\n// core components\nimport GridItem from \"../../components/Grid/GridItem.jsx\";\nimport GridContainer from \"../../components/Grid/GridContainer.jsx\";\nimport Card from \"../../components/Card/Card.jsx\";\nimport CardHeader from \"../../components/Card/CardHeader.jsx\";\nimport CardBody from \"../../components/Card/CardBody.jsx\";\n\nimport iconsStyle from \"../../assets/jss/material-dashboard-react/views/iconsStyle.jsx\";\n\nimport { letterFrequency } from '@vx/mock-data';\nimport { Group } from '@vx/group';\nimport { Bar } from '@vx/shape';\nimport { scaleLinear, scaleBand } from '@vx/scale';\n\n// We'll use some mock data from `@vx/mock-data` for this.\nconst data = letterFrequency;\n\n// Define the graph dimensions and margins\nconst width = 500;\nconst height = 500;\nconst margin = { top: 20, bottom: 20, left: 20, right: 20 };\n\n// Then we'll create some bounds\nconst xMax = width - margin.left - margin.right;\nconst yMax = height - margin.top - margin.bottom;\n\n// We'll make some helpers to get at the data we want\nconst x = d => d.letter;\nconst y = d => +d.frequency * 100;\n\n// And then scale the graph by our data\nconst xScale = scaleBand({\n  rangeRound: [0, xMax],\n  domain: data.map(x),\n  padding: 0.4,\n});\nconst yScale = scaleLinear({\n  rangeRound: [yMax, 0],\n  domain: [0, Math.max(...data.map(y))],\n});\n\n// Compose together the scale and accessor functions to get point functions\nconst compose = (scale, accessor) => (data) => scale(accessor(data));\nconst xPoint = compose(xScale, x);\nconst yPoint = compose(yScale, y);\n\n// Finally we'll embed it all in an SVG\nfunction BarGraph(props) {\n  return (\n    <svg width={width} height={height}>\n      {data.map((d, i) => {\n        const barHeight = yMax - yPoint(d);\n        return (\n          <Group key={`bar-${i}`}>\n            <Bar\n              x={xPoint(d)}\n              y={yMax - barHeight}\n              height={barHeight}\n              width={xScale.bandwidth()}\n              fill='#fc2e1c'\n            />\n          </Group>\n        );\n      })}\n    </svg>\n  );\n}\n//\n// import {\n//   occupancyStatsChart,\n// } from \"../../variables/d3Charts.jsx\";\n\n\nclass Icons extends React.Component  {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {label: '', values: [\n          {x: 5, y: 1},\n          {x: 5, y: 2},\n          {x: 5, y: 0},\n          {x: 5, y: 3},\n          {x: 5, y: 2},\n          {x: 5, y: 3},\n          {x: 5, y: 4},\n          {x: 5, y: 4},\n          {x: 5, y: 1},\n          {x: 4, y: 5},\n          {x: 2, y: 0},\n      ]}\n    };\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n    // this.setState({xScale: ReactD3.time.scale().domain([extent[0], extent[1]]).range([0, 400 - 70])});\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card plain>\n            <CardHeader plain color=\"primary\">\n              <h4 className={classes.cardTitleWhite}>Occupancy Statistics</h4>\n              <p className={classes.cardCategoryWhite}>\n                Derived from room data per hour\n              </p>\n            </CardHeader>\n            <CardBody>\n              <div>\n                <BarGraph />\n              </div>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    );\n  }\n}\n\nIcons.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(iconsStyle)(Icons);\n"]},"metadata":{},"sourceType":"module"}